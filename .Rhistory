first(AGEP),
YBL,
HINCP,
TEN,
MV,
BLD,
PUMA
) %>%
filter(PUMA %in% sf_pumas$PUMACE10) %>%
filter(YBL %in% 1:3) %>%
mutate(
leadrisk = ifelse(
(HINCP < 90000) &
(AGEP %in% 0:6),
1,
0
)
)
sf_pums <-
pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0"),
YBL = as.numeric(YBL),
HINCP = as.numeric(HINCP),
AGEP = as.numeric(AGEP)
) %>%
group_by(SERIALNO) %>%
arrange(AGEP) %>%
summarize(
first(AGEP),
YBL,
HINCP,
TEN,
MV,
BLD,
PUMA
)
View(sf_pums)
View(sf_pums)
#before_1960 <- c(1,2,3)
#years <- c(0,1,2,3,4,5,6)
sf_pums <-
pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0"),
YBL = as.numeric(YBL),
HINCP = as.numeric(HINCP),
AGEP = as.numeric(AGEP)
) %>%
group_by(SERIALNO) %>%
arrange(AGEP) %>%
summarize(
AGEP = first(AGEP),
YBL,
HINCP,
TEN,
MV,
BLD,
PUMA
) %>%
filter(PUMA %in% sf_pumas$PUMACE10) %>%
filter(YBL %in% 1:3) %>%
mutate(
leadrisk = ifelse(
(HINCP < 90000) &
(AGEP %in% 0:6),
1,
0
)
)
#before_1960 <- c(1,2,3)
#years <- c(0,1,2,3,4,5,6)
sf_pums <-
pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0"),
YBL = as.numeric(YBL),
HINCP = as.numeric(HINCP),
AGEP = as.numeric(AGEP)
) %>%
group_by(SERIALNO) %>%
arrange(AGEP) %>%
summarize(
AGEP = first(AGEP),
YBL = first(YBL),
HINCP = first(HINCP),
TEN = first(TEN),
MV = first(MV),
BLD = first(BLD),
PUMA = first(PUMA)
) %>%
filter(PUMA %in% sf_pumas$PUMACE10) %>%
filter(YBL %in% 1:3) %>%
mutate(
leadrisk = ifelse(
(HINCP < 90000) &
(AGEP %in% 0:6),
1,
0
)
)
logit_model <- glm(
leadrisk ~ BLD + TEN + MV + PUMA,
family = quasibinomial(),
data = sf_pums
)
summary(logit_model)
View(sf_pums)
View(sf_pums)
sf_pums <-
pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0"),
YBL = as.numeric(YBL),
HINCP = as.numeric(HINCP),
AGEP = as.numeric(AGEP)
) %>%
group_by(SERIALNO) %>%
arrange(AGEP)
View(sf_pums)
View(sf_pums)
sf_pums <-
pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0"),
YBL = as.numeric(YBL),
HINCP = as.numeric(HINCP),
AGEP = as.numeric(AGEP)
) %>%
group_by(SERIALNO) %>%
arrange(AGEP) %>%
summarize(
AGEP = first(AGEP),
YBL = first(YBL),
HINCP = first(HINCP),
TEN = first(TEN),
MV = first(MV),
BLD = first(BLD),
PUMA = first(PUMA)
) %>%
filter(PUMA %in% sf_pumas$PUMACE10) %>%
filter(YBL %in% 1:3) %>%
mutate(
leadrisk = ifelse(
(HINCP < 90000) &
(AGEP %in% 0:5),
1,
0
)
)
logit_model <- glm(
leadrisk ~ BLD + TEN + MV + PUMA,
family = quasibinomial(),
data = sf_pums
)
summary(logit_model)
sf_pums <-
pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0"),
YBL = as.numeric(YBL),
HINCP = as.numeric(HINCP),
AGEP = as.numeric(AGEP)
) %>%
group_by(SERIALNO) %>%
arrange(AGEP) %>%
summarize(
AGEP = first(AGEP),
YBL = first(YBL),
HINCP = first(HINCP),
TEN = first(TEN),
MV = first(MV),
BLD = first(BLD),
PUMA = first(PUMA),
WGTP = first(WGTP)
) %>%
filter(PUMA %in% sf_pumas$PUMACE10) %>%
filter(YBL %in% 1:3) %>%
mutate(
leadrisk = ifelse(
(HINCP < 90000) &
(AGEP %in% 0:5),
1,
0
)
)
logit_model <- glm(
leadrisk ~ BLD + TEN + MV + PUMA,
family = quasibinomial(),
data = sf_pums
)
summary(logit_model)
sf_pums <-
pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0"),
YBL = as.numeric(YBL),
HINCP = as.numeric(HINCP),
AGEP = as.numeric(AGEP)
) %>%
group_by(SERIALNO) %>%
arrange(AGEP) %>%
summarize(
AGEP = first(AGEP),
YBL = first(YBL),
HINCP = first(HINCP),
TEN = first(TEN),
MV = first(MV),
BLD = first(BLD),
PUMA = first(PUMA),
WGTP = first(WGTP)
) %>%
filter(PUMA %in% sf_pumas$PUMACE10) %>%
filter(YBL %in% 1:3) %>%
mutate(
leadrisk = ifelse(
(HINCP < 90000) &
(AGEP %in% 0:5),
1,
0
)
)
logit_model <- glm(
leadrisk ~ BLD + TEN + MV + PUMA,
family = quasibinomial(),
data = sf_pums
)
summary(logit_model)
sf_pums <-
pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0"),
YBL = as.numeric(YBL),
HINCP = as.numeric(HINCP),
AGEP = as.numeric(AGEP)
) %>%
group_by(SERIALNO) %>%
arrange(AGEP) %>%
summarize(
AGEP = first(AGEP),
YBL = first(YBL),
HINCP = first(HINCP),
TEN = first(TEN),
MV = first(MV),
BLD = first(BLD),
PUMA = first(PUMA),
WGTP = first(WGTP)
) %>%
filter(PUMA %in% sf_pumas$PUMACE10) %>%
filter(YBL %in% 1:3) %>%
mutate(
leadrisk = ifelse(
(HINCP < 90000) &
(AGEP %in% 0:5),
1,
0
)
) %>%
#factoring
mutate(
building = BLD %>%
factor(
levels = sf_pums$BLD %>%
unique() %>%
as.numeric() %>%
sort()
),
tenure = TEN %>%
factor(
levels = sf_pums$TEN %>%
unique() %>%
as.numeric() %>%
sort()
),
movein = MV %>%
factor(
levels = sf_pums$MV %>%
unique() %>%
as.numeric() %>%
sort()
),
puma = PUMA %>%
factor(
levels = sf_pums$BLD %>%
unique() %>%
sort()
)
)
logit_model <- glm(
leadrisk ~ building + tenure + movein + puma,
family = quasibinomial(),
data = sf_pums
)
summary(logit_model)
predict(logit_model, data.frame(sample_n(sf_pums,1)), type = "response")
sf_pums_binded <-
sf_pums %>%
cbind(model_predict)
random_predict <-
predict(logit_model, data.frame(sample_n(sf_pums,1)), type = "response")
random_predict
model_predict <-
predict(logit_model, type = "response")
model_predict
sf_pums_binded <-
sf_pums %>%
cbind(model_predict)
summary_2x2 <-
sf_pums_binded %>%
mutate(
leadrisk = ifelse(
leadrisk == 1,
"Yes (Leadrisk)",
"No (Predict)"
)
) %>%
pull(leadrisk) %>%
table(model_predict > 0.1)
temp <- tempfile()
download.file("https://www2.census.gov/programs-surveys/acs/data/pums/2019/1-Year/csv_hca.zip",destfile = temp)
pums_hca_2019_1yr <- read_csv(unzip(temp,"psam_h06.csv"))
unlink(temp)
View(sf_pums_binded)
View(sf_pums_binded)
library(tidyverse)
library(sf)
library(tigris)
library(censusapi)
library(mapview)
library(devtools)
library(leaflet)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HINCP",
"RWAT",
"YBL",
"BLD",
"TEN",
"MV",
"AGEP"
)
)
rm(temp)
rm.temp
rm(pums_hca_2019_1yr)
library(tidyverse)
library(sf)
library(tigris)
library(censusapi)
library(mapview)
library(devtools)
library(leaflet)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HINCP",
"RWAT",
"YBL",
"BLD",
"TEN",
"MV",
"AGEP"
)
)
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HINCP",
"RWAT",
"YBL",
"BLD",
"TEN",
"MV",
"AGEP"
)
)
library(tidyverse)
library(sf)
library(tigris)
library(censusapi)
library(mapview)
library(devtools)
library(leaflet)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HINCP",
"RWAT",
"YBL",
"BLD",
"TEN",
"MV",
"AGEP"
)
)
library(tidyverse)
library(sf)
library(tigris)
library(censusapi)
library(mapview)
library(devtools)
library(leaflet)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HINCP",
"RWAT",
"YBL",
"BLD",
"TEN",
"MV",
"AGEP"
)
)
logit_model <- glm(
leadrisk ~ building + tenure + movein + puma,
family = quasibinomial(),
data = sf_pums_factored
)
summary(logit_model)
logit_model <- glm(
leadrisk ~ building + tenure + movein + puma,
family = quasibinomial(),
data = sf_pums
)
summary(logit_model)
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HINCP",
"RWAT",
"YBL",
"BLD",
"TEN",
"MV",
"AGEP"
)
)
summary(logit_model)
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HINCP",
"RWAT",
"YBL",
"BLD",
"TEN",
"MV",
"AGEP"
)
)

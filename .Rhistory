title = "Average Value per square foot over time",
x = "Fiscal Year",
y = "Average Value per square foot",
)
sqft_graph
plot <-
epa_value %>%
select(`Fiscal Year`, tenure, `Net Value`) %>%
st_drop_geometry() %>%
group_by(`Fiscal Year`, tenure) %>%
summarise(
avg = mean(`Net Value`, na.rm = T)
) %>%
ungroup(`Fiscal Year`, tenure)
graph <-
plot %>%
ggplot(
aes(
x = `Fiscal Year`,
y = avg,
color = tenure,
group = tenure
)
) +
scale_color_manual(values=c("#CC6666", "#9999CC")) +
geom_line() +
geom_point() +
labs(
title = "Average Net Value over time",
x = "Fiscal Year",
y = "Average Net Value ($)",
)
graph
sqft_graph <-
epa_area %>%
ggplot(
aes(
x = `Fiscal Year`,
y = valuepersqft,
group = tenure,
color = tenure
)
) +
scale_color_manual(values=c("#CC6666", "#9999CC")) +
geom_line() +
labs(
title = "Average value per square foot over time",
x = "Fiscal Year",
y = "Average value per square foot ($)",
)
sqft_graph
graph
epa_area <-
epa_value %>%
select(`Fiscal Year`, tenure, Acres, `Net Value`) %>%
st_drop_geometry() %>%
group_by(`Fiscal Year`, tenure) %>%
summarise(
avg_value = mean(`Net Value`, na.rm = T),
avg_sqft = mean(Acres, na.rm = T)
) %>%
ungroup(`Fiscal Year`, tenure) %>%
mutate(
avg_sqft = avg_sqft*43560
) %>%
mutate(
valuepersqft = avg_value/avg_sqft
) %>%
select(-"avg_sqft") %>%
select(-"avg_value")
sqft_graph <-
epa_area %>%
ggplot(
aes(
x = `Fiscal Year`,
y = valuepersqft,
group = tenure,
color = tenure
)
) +
scale_color_manual(values=c("#CC6666", "#9999CC")) +
geom_line() +
labs(
title = "Average value per square foot over time",
x = "Fiscal Year",
y = "Average value per square foot ($)",
)
sqft_graph
sqft_graph <-
epa_area %>%
ggplot(
aes(
x = `Fiscal Year`,
y = valuepersqft,
group = tenure,
color = tenure
)
) +
scale_color_manual(values=c("#CC6666", "#9999CC")) +
geom_line() +
geom_point() +
labs(
title = "Average value per square foot over time",
x = "Fiscal Year",
y = "Average value per square foot ($)",
)
sqft_graph
knitr::opts_chunk$set(echo = F, warning = F, message = F)
library(tidyverse)
library(readxl)
library(tigris)
library(sf)
library(leaflet)
library(tidycensus)
library(censusapi)
library(mapview)
library(esri2sf)
library(plotly)
library(knitr)
library(mapboxapi)
library(stringr)
library(remotes)
library(raster)
library(stars)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
# acs_vars_2019_5yr <-
#   listCensusMetadata(
#     name = "2019/acs/acs5",
#     type = "variables"
#   )
#
# saveRDS(acs_vars_2019_5yr, "acs_vars_2019_5yr.rds")
acs_vars_2019_5yr <- readRDS("acs_vars_2019_5yr.rds")
slr <- 25
rp <- 20
test_flood <- readRDS("test_flood.rds")
rdwd_boundary <- places("CA") %>%
filter(NAME == "Redwood City")
rdwd_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Redwood City")
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910) %>%
st_bbox()
)
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910) %>%
st_bbox()
)
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910) %>%
st_bbox()
)
setwd("~/Documents/GitHub/djacobsberg.github.io")
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910) %>%
st_bbox()
)
test_flood <- readRDS("test_flood.rds")
rdwd_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Redwood City")
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910) %>%
st_bbox()
)
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910) %>%
st_bbox()
)
flood_pal <- colorNumeric(
palette = "Blues",
domain = values(test_flood_rdwd),
na.color = "transparent"
)
test_flood_rdwd <- test_flood
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary #%>%
#st_transform(26910) %>%
#st_bbox()
)
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
#st_transform(26910) %>%
st_bbox()
)
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910) #%>%
#st_bbox()
)
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910) #%>%
st_bbox()
)
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910), #%>%
st_bbox()
)
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910), #%>%
#st_bbox()
)
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910),
st_bbox()
)
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910),
st_bbox()
)
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910) %>%
st_bbox()
)
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910) %>%
st_bbox()
)
slr <- 25
rp <- 20
test_flood <- readRDS("test_flood.rds")
rdwd_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Redwood City")
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910) %>%
st_bbox()
)
View(rdwd_boundary)
library(stars)
install.packages("stars")
install.packages("stars")
library(raster)
library(stars)
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910) %>%
st_bbox()
)
library(tidyverse)
library(readxl)
library(tigris)
library(sf)
library(leaflet)
library(tidycensus)
library(censusapi)
library(mapview)
library(esri2sf)
library(plotly)
library(knitr)
library(mapboxapi)
library(stringr)
library(remotes)
library(raster)
library(stars)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
# acs_vars_2019_5yr <-
#   listCensusMetadata(
#     name = "2019/acs/acs5",
#     type = "variables"
#   )
#
# saveRDS(acs_vars_2019_5yr, "acs_vars_2019_5yr.rds")
acs_vars_2019_5yr <- readRDS("acs_vars_2019_5yr.rds")
slr <- 25
rp <- 20
test_flood <- readRDS("test_flood.rds")
rdwd_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Redwood City")
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910) %>%
st_bbox()
)
library(tidyverse)
library(readxl)
library(tigris)
library(sf)
library(leaflet)
library(tidycensus)
library(censusapi)
library(mapview)
library(esri2sf)
library(plotly)
library(knitr)
library(mapboxapi)
library(stringr)
library(remotes)
library(raster)
library(stars)
library(tidyverse)
library(readxl)
library(tigris)
library(sf)
library(leaflet)
library(tidycensus)
library(censusapi)
library(mapview)
library(esri2sf)
library(plotly)
library(knitr)
library(mapboxapi)
library(stringr)
library(remotes)
library(raster)
library(stars)
jdcnj
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
acs_vars_2019_5yr <- readRDS("acs_vars_2019_5yr.rds")
slr <- 25
rp <- 20
test_flood <- readRDS("test_flood.rds")
rdwd_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Redwood City")
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910) %>%
st_bbox()
)
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
#st_transform(26910) %>%
st_bbox()
)
View(test_flood)
library(raster)
installed.packages("raster")
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910) %>%
st_bbox()
)
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(4326) %>%
st_bbox()
)
osm_bldg <- readRDS("osm_bldg.rds")
osm_bldg <- readRDS("osm_bldg.rds")
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(4326) %>%
st_bbox()
)
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910) %>%
st_bbox()
)
rdwd_boundary %>%
st_transform(26910) %>%
st_bbox()
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910) %>%
st_bbox()
)
rdwd_boundary %>%
st_transform(26910) %>%
st_bbox()
library(tidyverse)
library(readxl)
library(tigris)
library(sf)
library(leaflet)
library(tidycensus)
library(censusapi)
library(mapview)
library(esri2sf)
library(plotly)
library(knitr)
library(mapboxapi)
library(stringr)
library(remotes)
library(raster)
library(stars)
?crop
test_flood_rdwd <- readRDS("test_floor_rdwd.rds")
setwd("~/Documents/GitHub/djacobsberg.github.io")
test_flood_rdwd <- readRDS("test_floor_rdwd.rds")
test_flood <- readRDS("test_flood.rds")
test_flood_rdwd <- readRDS("test_floor_rdwd.rds")
test_flood_rdwd <- readRDS("test_flood_rdwd.rds")
osm_bldg <- readRDS("osm_bldg.rds")
rdwd_bldg <- readRDS("rdwd_bldg.rds")
test_flood_rdwd <- readRDS("test_flood_rdwd.rds")
plot(test_flood_rdwd)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
library(tidyverse)
library(readxl)
library(tigris)
library(sf)
library(leaflet)
library(tidycensus)
library(censusapi)
library(mapview)
library(esri2sf)
library(plotly)
library(knitr)
library(mapboxapi)
library(stringr)
library(remotes)
library(raster)
library(stars)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
# acs_vars_2019_5yr <-
#   listCensusMetadata(
#     name = "2019/acs/acs5",
#     type = "variables"
#   )
#
# saveRDS(acs_vars_2019_5yr, "acs_vars_2019_5yr.rds")
acs_vars_2019_5yr <- readRDS("acs_vars_2019_5yr.rds")
slr <- 25
rp <- 20
test_flood <- readRDS("test_flood.rds")
rdwd_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Redwood City")
test_flood_rdwd <- readRDS("test_flood_rdwd.rds")
plot(test_flood_rdwd)
flood_pal <- colorNumeric(
palette = "Blues",
domain = values(test_flood_rdwd),
na.color = "transparent"
)
leaflet() %>%
addMapboxTiles(
style_id = "satellite-streets-v11",
username = "mapbox",
options = tileOptions(opacity = 0.5)
) %>%
addRasterImage(
test_flood_rdwd,
colors = flood_pal
) %>%
addLegend(
pal = flood_pal,
values = values(test_flood_rdwd),
title = "Flood depth, cm"
)
plot(test_flood_rdwd)
test_flood_rdwd <- readRDS("test_flood_rdwd.rds")
setwd("~/Documents/GitHub/djacobsberg.github.io")
plot(test_flood_rdwd)
test_flood_rdwd <- test_flood %>%
crop(
rdwd_boundary %>%
st_transform(26910) %>%
st_bbox()
)
osm_bldg <- readRDS("osm_bldg.rds")
rdwd_bldg <- readRDS("rdwd_bldg.rds")
rdwd_bldg <- readRDS("rdwd_bldg.rds")
rdwd_bldg <- readRDS("rdwd_bldg.rds")
rdwd_bldg <- readRDS("rdwd_bldg.rds")
View(rdwd_boundary)
ca_cbgs <- block_groups("CA", cb = T, progress_bar = F)
View(ca_cbgs)
ca_cbgs <- block_groups("CA", cb = T, progress_bar = F) %>%
filter(COUNTYFP == "085")
ca_cbgs <- block_groups("CA", cb = T, progress_bar = F) %>%
filter(COUNTYFP == "081")
osm_bldg <- readRDS("osm_bldg.rds")
plot(test_flood_rdwd)
test_flood_rdwd <- readRDS("test_flood_rdwd.rds")
flood_pal <- colorNumeric(
palette = "Blues",
domain = values(test_flood_rdwd),
na.color = "transparent"
)
plot(test_flood_rdwd)
pwd
setwd("~/Documents/GitHub/djacobsberg.github.io")
plot(test_flood_rdwd)

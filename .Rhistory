select(-Athlete) %>%
select(-Discipline) %>%
select(-Gender) %>%
select(-Event)
data_project <- data_project %>%
mutate(
results_war = recode(Country,
"USA" = "Win",
"MEX" = "Neutral",
"DEN" = "Neutral",
"FRA" = "Neutral",
"AUS" = "Win",
"HUN" = "Lose",
"NED" = "Neutral",
"GBR" = "Win",
"ITA" = "Lose",
"SWE" = "Neutral",
"TCH" = "Neutral",
"SUI" = "Neutral",
"PAN" = "Neutral",
"JAM" = "Neutral",
"SRI" = "Neutral",
"CAN" = "Win",
"BEL" = "Neutral",
"YUG" = "Neutral",
"NOR" = "Win",
"FIN" = "Neutral",
"AUT" = "Neutral",
"ARG" = "Neutral",
"TUR" = "Neutral",
"BRA" = "Win",
"KOR" = "Win",
"RSA" = "Win",
"PUR" = "Neutral",
"POL" = "Neutral",
"POR" = "Neutral",
"EGY" = "Neutral",
"ESP" = "Neutral",
"IND" = "Neutral",
"IRI" = "Neutral",
"PER" = "Neutral",
"TRI" = "Neutral",
"URU" = "Neutral",
"CUB" = "Neutral"))
count_results <- data_project %>%
count(results_war, Country) %>%
mutate(
prop = n / sum(n)
)
count <- data_project %>%
count(results_war) %>%
mutate(
prop = n / sum(n)
)
contingencytable <- data_project %>%
count(results_war)
chisq.test(count$n)
total <- as.numeric(sum(count$n))
y_lose <- as.numeric(count[1,2])
y_neutral <- as.numeric(count[2,2])
y_win <- as.numeric(count[3,2])
bf_lose <- proportionBF( y = y_lose, N = total, p = 0.33)
bf_neutral <- proportionBF( y = y_neutral, N = total, p = 0.33)
bf_win <- proportionBF( y = y_win, N = total, p = 0.33)
bf_lose
bf_neutral
bf_win
count_results %>%
ggplot(aes(x = fct_reorder(Country, prop, desc), y = prop, fill = results_war)) +
geom_col() +
xlab("Countries") +
ylab("Proportion of Medal per Country") +
labs(fill = "Results of War") +
theme(axis.text.x = element_text (angle = 90, hjust = 1))
count_results %>%
ggplot(aes(x = fct_reorder(Country, prop, desc), y = prop, fill = results_war)) +
geom_col() +
xlab("Countries") +
ylab("Proportion of Medal per Country") +
labs(fill = "Results of War") +
theme(axis.text.x = element_text (angle = 90, hjust = 1))
count %>%
ggplot(aes(x = results_war, y = prop)) +
geom_col() +
xlab("Outcomes of War") +
ylab("Proportion of Medals by Outcome")
count_results %>%
ggplot(aes(x = fct_reorder(Country, prop, desc), y = prop, fill = results_war)) +
geom_col() +
xlab("Countries") +
ylab("Proportion of Medal per Country") +
labs(fill = "Results of War") +
ggtitle("") +
theme(axis.text.x = element_text (angle = 90, hjust = 1))
count %>%
ggplot(aes(x = results_war, y = prop)) +
geom_col() +
xlab("Outcomes of War") +
ylab("Proportion of Medals by Outcome") +
ggtitle("")
#Libaries
#Load the packages you need here
library(tidyverse)
library(BayesFactor)
#Files
# e.g., data_file <- "path"
data_file <- "/Users/Daphne/Documents/Stanford University/Freshman Year/Winter/Stats 60/Olympic Games/summer.csv"
my_data <- read_csv(data_file)
data_project <- my_data %>%
filter(Year == 1948)
data_project <- data_project %>%
select(-City) %>%
select(-Sport) %>%
select(-Athlete) %>%
select(-Discipline) %>%
select(-Gender) %>%
select(-Event)
data_project <- data_project %>%
mutate(
results_war = recode(Country,
"USA" = "Win",
"MEX" = "Neutral",
"DEN" = "Neutral",
"FRA" = "Neutral",
"AUS" = "Win",
"HUN" = "Lose",
"NED" = "Neutral",
"GBR" = "Win",
"ITA" = "Lose",
"SWE" = "Neutral",
"TCH" = "Neutral",
"SUI" = "Neutral",
"PAN" = "Neutral",
"JAM" = "Neutral",
"SRI" = "Neutral",
"CAN" = "Win",
"BEL" = "Neutral",
"YUG" = "Neutral",
"NOR" = "Win",
"FIN" = "Neutral",
"AUT" = "Neutral",
"ARG" = "Neutral",
"TUR" = "Neutral",
"BRA" = "Win",
"KOR" = "Win",
"RSA" = "Win",
"PUR" = "Neutral",
"POL" = "Neutral",
"POR" = "Neutral",
"EGY" = "Neutral",
"ESP" = "Neutral",
"IND" = "Neutral",
"IRI" = "Neutral",
"PER" = "Neutral",
"TRI" = "Neutral",
"URU" = "Neutral",
"CUB" = "Neutral"))
count_results <- data_project %>%
count(results_war, Country) %>%
mutate(
prop = n / sum(n)
)
count <- data_project %>%
count(results_war) %>%
mutate(
prop = n / sum(n)
)
contingencytable <- data_project %>%
count(results_war)
chisq.test(count$n)
total <- as.numeric(sum(count$n))
y_lose <- as.numeric(count[1,2])
y_neutral <- as.numeric(count[2,2])
y_win <- as.numeric(count[3,2])
bf_lose <- proportionBF( y = y_lose, N = total, p = 0.33)
bf_neutral <- proportionBF( y = y_neutral, N = total, p = 0.33)
bf_win <- proportionBF( y = y_win, N = total, p = 0.33)
bf_lose
bf_neutral
bf_win
count_results %>%
ggplot(aes(x = fct_reorder(Country, prop, desc), y = prop, fill = results_war)) +
geom_col() +
xlab("Countries") +
ylab("Proportion of Medal per Country") +
labs(fill = "Results of War") +
ggtitle("") +
theme(axis.text.x = element_text (angle = 90, hjust = 1))
View(count)
View(count)
View(count_results)
View(count_results)
View(contingencytable)
View(contingencytable)
contingencyTableBF(as.matrix(contingencytable),
sampleType = "indepMulti",
fixedMargin = "cols")
contingencyTableBF(as.matrix(contingencytable$n),
sampleType = "indepMulti",
fixedMargin = "cols")
values <- contingencytable$n
contingencyTableBF(as.matrix(values),
sampleType = "indepMulti",
fixedMargin = "cols")
values <- contingencytable$n
contingencyTableBF(as.matrix(values))
help(contigencytableBF)
help("contingencyTableBF")
values <- contingencytable$n
contingencyTableBF(as.matrix(values),
sampleType = "indepMulti")
values <- contingencytable$n
contingencyTableBF(as.matrix(values),
sampleType = "indepMulti",
fixedMargin = "rows")
values <- contingencytable$n
contingencyTableBF(as.matrix(contingencytable),
sampleType = "indepMulti",
fixedMargin = "rows")
values <- contingencytable$n
contingencyTableBF(as.matrix(contingencytable$n),
sampleType = "indepMulti",
fixedMargin = "rows")
contingencytable %>%
mutate(stdRes = (n - expected)/sqrt(expected))
contingencytable %>%
mutate(stdRes = (n - 0.33)/sqrt(0.33))
contingencytable %>%
mutate(stdRes = (contingencytable$n - 0.33)/sqrt(0.33))
contingencytable %>%
mutate(stdRes = (contingencytable$n - 271.3)/sqrt(271.3))
contingencytable %>%
mutate(stdRes = (n - 271.3)/sqrt(271.3))
contingencytable %>%
contingencyTableBF(as.matrix(contingencytable),
sampleType = "indepMulti",
fixedMargin = "rows")
contingencyTableBF(as.matrix(contingencytable),
sampleType = "indepMulti",
fixedMargin = "rows")
contingencyTableBF(as.matrix(contingencytable$n),
sampleType = "indepMulti",
fixedMargin = "rows")
total <- as.numeric(sum(count$n))
y_lose <- as.numeric(count[1,2])
y_neutral <- as.numeric(count[2,2])
y_win <- as.numeric(count[3,2])
bf_lose <- proportionBF( y = y_lose, N = total, p = 0.33)
bf_neutral <- proportionBF( y = y_neutral, N = total, p = 0.33)
bf_win <- proportionBF( y = y_win, N = total, p = 0.33)
bf_lose
bf_neutral
bf_win
contingencytable %>%
mutate(stdRes = (n - 271.3)/sqrt(271.3))
contingencytable %>%
mutate(stdRes = (n - 271.3)/sqrt(271.3))
count %>%
mutate(stdRes = (n - 271.3)/sqrt(271.3))
count$n %>%
mutate(stdRes = (n - 271.3)/sqrt(271.3))
count %>%
mutate(stdRes = (n - 271.3)/sqrt(271.3))
count %>%
select(-prop)
mutate(stdRes = (n - 271.3)/sqrt(271.3))
count %>%
select(-prop) %>%
mutate(stdRes = (n - 271.3)/sqrt(271.3))
contingencytable %>%
mutate(stdRes = (n - 271.3)/sqrt(271.3))
count_results %>%
ggplot(aes(x = fct_reorder(Country, prop, desc), y = prop, fill = results_war)) +
geom_col() +
xlab("Countries") +
ylab("Proportion of Medal per Country") +
labs(fill = "Results of War") +
ggtitle("") +
theme(axis.text.x = element_text (angle = 90, hjust = 1))
count %>%
ggplot(aes(x = results_war, y = prop)) +
geom_col() +
xlab("Outcomes of War") +
ylab("Proportion of Medals by Outcome") +
ggtitle("")
#Libaries
#Load the packages you need here
library(tidyverse)
library(BayesFactor)
#Files
# e.g., data_file <- "path"
data_file <- "/Users/Daphne/Documents/Stanford University/Freshman Year/Winter/Stats 60/Olympic Games/summer.csv"
my_data <- read_csv(data_file)
data_project <- my_data %>%
filter(Year == 1948)
data_project <- data_project %>%
select(-City) %>%
select(-Sport) %>%
select(-Athlete) %>%
select(-Discipline) %>%
select(-Gender) %>%
select(-Event)
data_project <- data_project %>%
mutate(
results_war = recode(Country,
"USA" = "Win",
"MEX" = "Neutral",
"DEN" = "Neutral",
"FRA" = "Neutral",
"AUS" = "Win",
"HUN" = "Lose",
"NED" = "Neutral",
"GBR" = "Win",
"ITA" = "Lose",
"SWE" = "Neutral",
"TCH" = "Neutral",
"SUI" = "Neutral",
"PAN" = "Neutral",
"JAM" = "Neutral",
"SRI" = "Neutral",
"CAN" = "Win",
"BEL" = "Neutral",
"YUG" = "Neutral",
"NOR" = "Win",
"FIN" = "Neutral",
"AUT" = "Neutral",
"ARG" = "Neutral",
"TUR" = "Neutral",
"BRA" = "Win",
"KOR" = "Win",
"RSA" = "Win",
"PUR" = "Neutral",
"POL" = "Neutral",
"POR" = "Neutral",
"EGY" = "Neutral",
"ESP" = "Neutral",
"IND" = "Neutral",
"IRI" = "Neutral",
"PER" = "Neutral",
"TRI" = "Neutral",
"URU" = "Neutral",
"CUB" = "Neutral"))
count_results <- data_project %>%
count(results_war, Country) %>%
mutate(
prop = n / sum(n)
)
count <- data_project %>%
count(results_war) %>%
mutate(
prop = n / sum(n)
)
contingencytable <- data_project %>%
count(results_war)
chisq.test(count$n)
total <- as.numeric(sum(count$n))
y_lose <- as.numeric(count[1,2])
y_neutral <- as.numeric(count[2,2])
y_win <- as.numeric(count[3,2])
bf_lose <- proportionBF( y = y_lose, N = total, p = 0.33)
bf_neutral <- proportionBF( y = y_neutral, N = total, p = 0.33)
bf_win <- proportionBF( y = y_win, N = total, p = 0.33)
bf_lose
bf_neutral
bf_win
count_results %>%
ggplot(aes(x = fct_reorder(Country, prop, desc), y = prop, fill = results_war)) +
geom_col() +
xlab("Countries") +
ylab("Proportion of Medal per Country") +
labs(fill = "Results of War") +
ggtitle("Distribution of Medals across Countries") +
theme(axis.text.x = element_text (angle = 90, hjust = 1))
count %>%
ggplot(aes(x = results_war, y = prop)) +
geom_col() +
xlab("Outcomes of War") +
ylab("Proportion of Medals by Outcome") +
ggtitle("Distribution of medals for Outcomes of War")
count %>%
ggplot(aes(x = results_war, y = prop)) +
geom_col() +
xlab("Outcomes of War") +
ylab("Proportion of Medals by Outcome") +
ggtitle("Neutral countries take most medals followed by the winning side and then, the losing side")
count %>%
ggplot(aes(x = results_war, y = prop)) +
geom_col() +
xlab("Outcomes of War") +
ylab("Proportion of Medals by Outcome") +
ggtitle("Neutral countries take most medals followed by the winning side and then, losing side")
count %>%
ggplot(aes(x = results_war, y = prop)) +
geom_col() +
xlab("Outcomes of War") +
ylab("Proportion of Medals by Outcome") +
ggtitle("Neutral countries take most medals followed by winning side and then, losing side")
count_results %>%
ggplot(aes(x = fct_reorder(Country, prop, desc), y = prop, fill = results_war)) +
geom_col() +
xlab("Countries") +
ylab("Proportion of Medal per Country") +
labs(fill = "Results of War") +
ggtitle("Majority of countries are neutral, USA takes the lead and only 2 countries that lost") +
theme(axis.text.x = element_text (angle = 90, hjust = 1))
#Libaries
#Load the packages you need here
library(tidyverse)
library(BayesFactor)
#Files
# e.g., data_file <- "path"
data_file <- "/Users/Daphne/Documents/Stanford University/Freshman Year/Winter/Stats 60/Olympic Games/summer.csv"
my_data <- read_csv(data_file)
data_project <- my_data %>%
filter(Year == 1948)
data_project <- data_project %>%
select(-City) %>%
select(-Sport) %>%
select(-Athlete) %>%
select(-Discipline) %>%
select(-Gender) %>%
select(-Event)
data_project <- data_project %>%
mutate(
results_war = recode(Country,
"USA" = "Win",
"MEX" = "Neutral",
"DEN" = "Neutral",
"FRA" = "Neutral",
"AUS" = "Win",
"HUN" = "Lose",
"NED" = "Neutral",
"GBR" = "Win",
"ITA" = "Lose",
"SWE" = "Neutral",
"TCH" = "Neutral",
"SUI" = "Neutral",
"PAN" = "Neutral",
"JAM" = "Neutral",
"SRI" = "Neutral",
"CAN" = "Win",
"BEL" = "Neutral",
"YUG" = "Neutral",
"NOR" = "Win",
"FIN" = "Neutral",
"AUT" = "Neutral",
"ARG" = "Neutral",
"TUR" = "Neutral",
"BRA" = "Win",
"KOR" = "Win",
"RSA" = "Win",
"PUR" = "Neutral",
"POL" = "Neutral",
"POR" = "Neutral",
"EGY" = "Neutral",
"ESP" = "Neutral",
"IND" = "Neutral",
"IRI" = "Neutral",
"PER" = "Neutral",
"TRI" = "Neutral",
"URU" = "Neutral",
"CUB" = "Neutral"))
count_results <- data_project %>%
count(results_war, Country) %>%
mutate(
prop = n / sum(n)
)
count <- data_project %>%
count(results_war) %>%
mutate(
prop = n / sum(n)
)
contingencytable <- data_project %>%
count(results_war)
chisq.test(count$n)
total <- as.numeric(sum(count$n))
y_lose <- as.numeric(count[1,2])
y_neutral <- as.numeric(count[2,2])
y_win <- as.numeric(count[3,2])
bf_lose <- proportionBF( y = y_lose, N = total, p = 0.33)
bf_neutral <- proportionBF( y = y_neutral, N = total, p = 0.33)
bf_win <- proportionBF( y = y_win, N = total, p = 0.33)
bf_lose
bf_neutral
bf_win
contingencytable %>%
mutate(stdRes = (n - 271.3)/sqrt(271.3))
count_results %>%
ggplot(aes(x = fct_reorder(Country, prop, desc), y = prop, fill = results_war)) +
geom_col() +
xlab("Countries") +
ylab("Proportion of Medal per Country") +
labs(fill = "Results of War") +
ggtitle("Majority of countries are neutral, USA takes the lead and only 2 countries that lost") +
theme(axis.text.x = element_text (angle = 90, hjust = 1))
count %>%
ggplot(aes(x = results_war, y = prop)) +
geom_col() +
xlab("Outcomes of War") +
ylab("Proportion of Medals by Outcome") +
ggtitle("Neutral countries take most medals followed by winning side and then, losing side")
#Libaries
#Load the packages you need here
library(tidyverse)
library(BayesFactor)
#Files
data_file <- "/Users/Daphne/Documents/Stanford University/Freshman Year/Winter/Stats 60/Olympic Games/summer.csv"
View(data_project)
View(data_project)
View(data_project)
View(data_project)
setwd("~/Documents/GitHub/djacobsberg.github.io")

title = "Prevalence of CardioVascular Disease"
)
View(ces4_clean)
View(ces4_clean)
ces4_bay_poverty <-
ces4_clean %>%
filter(`California County` %in% project_county_names) %>%
select(`Census Tract`, Poverty) %>%
left_join(
ca_tracts %>%
transmute(GEOID = as.numeric(GEOID)),
by = c("Census Tract" = "GEOID")
) %>%
st_as_sf()
poverty_pal <- colorNumeric(
palette = "Reds",
domain = ces4_bay_cardio$Poverty
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = ces4_bay_poverty,
fillColor = ~poverty_pal(Poverty),
color = "white",
weight = 0.5,
fillOpacity = 0.5,
label = ~Poverty
) %>%
addLegend(
data = ces4_bay_poverty,
pal = poverty_pal,
values = ~Poverty,
title = "Poverty Level"
)
ces4_bay_poverty <-
ces4_clean %>%
filter(`California County` %in% project_county_names) %>%
filter(!is.na(Poverty)) %>%
select(`Census Tract`, Poverty) %>%
left_join(
ca_tracts %>%
transmute(GEOID = as.numeric(GEOID)),
by = c("Census Tract" = "GEOID")
) %>%
st_as_sf()
poverty_pal <- colorNumeric(
palette = "Reds",
domain = ces4_bay_cardio$Poverty
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = ces4_bay_poverty,
fillColor = ~poverty_pal(Poverty),
color = "white",
weight = 0.5,
fillOpacity = 0.5,
label = ~Poverty
) %>%
addLegend(
data = ces4_bay_poverty,
pal = poverty_pal,
values = ~Poverty,
title = "Poverty Level"
)
#scatter plot
bay_cardio_poverty_tract <-
ces4_map %>%
filter(
!is.na(`Cardiovascular Disease`),
!is.na(Poverty)
)
ggplot(
data = bay_cardio_poverty_tract,
aes(
x = `Cardiovascular Disease`,
y = Poverty
)) +
geom_point() +
labs(
title = "Cardiovascular Disease x Poverty Scatter Plot"
) +
geom_smooth(method = "lm")
model <- lm(`Cardiovascular Disease` ~ Poverty, bay_cardio_poverty_tract)
summary(model)
plot(density(residuals(model)))
#scatter plot
bay_cardio_poverty_tract <-
ces4_map %>%
filter(
!is.na(`Cardiovascular Disease`),
!is.na(Poverty)
)
ggplot(
data = bay_cardio_poverty_tract,
aes(
x = `Cardiovascular Disease`,
y = Poverty
)) +
geom_point() +
labs(
title = "Cardiovascular Disease x Poverty Scatter Plot"
) +
geom_smooth(method = "lm")
#scatter plot
bay_cardio_poverty_tract <-
ces4_map %>%
filter(
!is.na(`Cardiovascular Disease`),
!is.na(Poverty)
)
ggplot(
data = bay_cardio_poverty_tract,
aes(
x = Poverty,
y = `Cardiovascular Disease`
)) +
geom_point() +
labs(
title = "Cardiovascular Disease x Poverty Scatter Plot"
) +
geom_smooth(method = "lm")
model <- lm(`Cardiovascular Disease` ~ Poverty, bay_cardio_poverty_tract)
summary(model)
model <- lm(Poverty ~ `Cardiovascular Disease`, bay_cardio_poverty_tract)
summary(model)
plot(density(residuals(model)))
#log
ggplot(
data = bay_cardio_poverty_tract,
aes(
x = Poverty,
y = log(`Cardiovascular Disease`)
)) +
geom_point() +
labs(
title = "Cardiovascular Disease x Poverty Scatter Plot LOG"
) +
geom_smooth(method = "lm")
model_log <- lm(log(`Cardiovascular Disease`) ~ Poverty, bay_cardio_poverty_tract)
summary(model_log)
plot(density(residuals(model_log)))
plot(density(residuals(model)))
data_with_residuals <-
bay_cardio_poverty_tract %>%
mutate(
Residuals = residuals(model_log)
)
residuals_pal <- colorNumeric(
palette = "Reds",
domain = data_with_residuals$Residuals
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = data_with_residuals,
fillColor = ~residuals_pal(Residuals),
color = "white",
weight = 0.5,
fillOpacity = 0.5,
label = ~Residuals
)
data_with_residuals <-
bay_cardio_poverty_tract %>%
mutate(
Residuals = residuals(model_log)
)
residuals_pal <- colorNumeric(
palette = "Reds",
domain = data_with_residuals$Residuals
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = data_with_residuals,
fillColor = ~residuals_pal(Residuals),
color = "white",
weight = 0.5,
fillOpacity = 0.5,
label = ~Residuals
) %>%
addLegend(
data = data_with_residuals,
pal = residuals_pal,
values = ~Residuals,
title = "Residuals"
)
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HINCP",
"RWAT",
"FFSP",
"KIT",
"BLD",
"TEN"
)
)
# saveRDS(pums_2019_1yr, "final_pums.rds")
# pums_2019_1yr <- readRDS("final_pums.rds")
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"NP",
"HINCP",
"RWAT",
"FFSP",
"KIT",
"BLD",
"TEN"
)
)
saveRDS(pums_2019_1yr, "final_pums.rds")
pums_2019_1yr <- readRDS("final_pums.rds")
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
project_county_names <-
c(
"Alameda",
"San Francisco"
)
bay_counties <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME %in% project_county_names)
bay_pumas <-
ca_pumas %>%
st_centroid() %>%
.[bay_counties, ] %>%
st_drop_geometry() %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
bay_pums <-
pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0"),
HINCP = as.numeric(HINCP)
) %>%
group_by(SERIALNO) %>%
filter(PUMA %in% bay_pumas$PUMACE10) %>%
mutate(
allocated = ifelse(
(HINCP < 66000) &
(FFSP == 1),
1,
0
)
)
bay_pums_factored <-
bay_pums %>%
mutate(
building = BLD %>%
factor(
levels = sf_pums$BLD %>%
unique() %>%
as.numeric() %>%
sort()
),
tenure = TEN %>%
factor(
levels = sf_pums$TEN %>%
unique() %>%
as.numeric() %>%
sort()
),
kitchen = KIT %>%
factor(
levels = sf_pums$KIT %>%
unique() %>%
as.numeric() %>%
sort()
),
puma = PUMA %>%
factor(
levels = sf_pums$PUMA %>%
unique() %>%
sort()
)
)
bay_pums <-
pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0"),
HINCP = as.numeric(HINCP)
) %>%
group_by(SERIALNO) %>%
filter(PUMA %in% bay_pumas$PUMACE10) %>%
mutate(
allocated = ifelse(
(HINCP < 66000) &
(FFSP == 1),
1,
0
)
)
bay_pums_factored <-
bay_pums %>%
mutate(
building = BLD %>%
factor(
levels = bay_pums$BLD %>%
unique() %>%
as.numeric() %>%
sort()
),
tenure = TEN %>%
factor(
levels = bay_pums$TEN %>%
unique() %>%
as.numeric() %>%
sort()
),
kitchen = KIT %>%
factor(
levels = bay_pums$KIT %>%
unique() %>%
as.numeric() %>%
sort()
),
puma = PUMA %>%
factor(
levels = bay_pums$PUMA %>%
unique() %>%
sort()
)
)
logit_model <- glm(
allocated ~ building + tenure + kitchen + puma,
family = quasibinomial(),
data = bay_pums_factored
)
summary(logit_model)
read.csv("StateAndCountyData.csv")
read.csv("StateAndCountyData.csv")
grocery_data <- read.csv("StateAndCountyData.csv")
View(grocery_data)
View(grocery_data)
grocery_data_clean <-
filter(State == "CA") %>%
filter(County %in% project_county_names)
grocery_data <- read.csv("StateAndCountyData.csv")
grocery_data_clean <-
filter(State = "CA") %>%
filter(County %in% project_county_names)
grocery_data <- read.csv("StateAndCountyData.csv")
grocery_data_clean <-
filter(State %in% "CA") %>%
filter(County %in% project_county_names)
grocery_data_clean <-
filter(County %in% project_county_names)
grocery_data_clean <-
grocery_data %>%
filter(
State %in% "CA",
) %>%
filter(County %in% project_county_names)
View(grocery_data_clean)
View(grocery_data_clean)
grocery_data_clean <-
grocery_data %>%
filter(County %in% project_county_names)
grocery_data_clean <-
grocery_data %>%
filter(County %in% project_county_names) %>%
mutate(
Variable_Code = case_when(
Variable_Code %in% c("GROC11", "GROC16") ~ "Grociery",
Variable_Code %in% c("SUPERC11", "SUPERC16") ~ "Supercenter",
Variable_Code %in% c("CONVS11", "CONVS16") ~ "Convenience",
Variable_Code %in% c("SPECS11", "SPECS16") ~ "Specialized",
Variable_Code %in% c("SNAPS12", "SNAPS17") ~ "SNAP Authorized",
Variable_Code %in% c("WICS11", "WICS16") ~ "WIC Authorized",
Variable_Code %in% c("FFR11", "FFR16") ~ "Fastfood",
)
)
grocery_data_clean <-
grocery_data %>%
filter(County %in% project_county_names) %>%
mutate(
Variable_Code = case_when(
Variable_Code %in% c("GROC11", "GROC16") ~ "Grociery",
Variable_Code %in% c("SUPERC11", "SUPERC16") ~ "Supercenter",
Variable_Code %in% c("CONVS11", "CONVS16") ~ "Convenience",
Variable_Code %in% c("SPECS11", "SPECS16") ~ "Specialized",
Variable_Code %in% c("SNAPS12", "SNAPS17") ~ "SNAP Authorized",
Variable_Code %in% c("WICS11", "WICS16") ~ "WIC Authorized",
Variable_Code %in% c("FFR11", "FFR16") ~ "Fastfood",
)
) %>%
filter(!is.na(Variable_Code))
grocery_data <- read.csv("StateAndCountyData.csv")
grocery_data_clean <-
grocery_data %>%
filter(County %in% project_county_names) %>%
mutate(
Variable_Code = case_when(
Variable_Code %in% c("GROC11", "GROC16") ~ "Grocery",
Variable_Code %in% c("SUPERC11", "SUPERC16") ~ "Supercenter",
Variable_Code %in% c("CONVS11", "CONVS16") ~ "Convenience",
Variable_Code %in% c("SPECS11", "SPECS16") ~ "Specialized",
Variable_Code %in% c("SNAPS12", "SNAPS17") ~ "SNAP Authorized",
Variable_Code %in% c("WICS11", "WICS16") ~ "WIC Authorized",
Variable_Code %in% c("FFR11", "FFR16") ~ "Fastfood",
)
) %>%
filter(!is.na(Variable_Code))
grocery_data_clean <-
grocery_data %>%
filter(County %in% project_county_names) %>%
mutate(
Variable_Code = case_when(
Variable_Code %in% c("GROC11", "GROC16") ~ "Grocery",
Variable_Code %in% c("SUPERC11", "SUPERC16") ~ "Supercenter",
Variable_Code %in% c("CONVS11", "CONVS16") ~ "Convenience",
Variable_Code %in% c("SPECS11", "SPECS16") ~ "Specialized",
Variable_Code %in% c("SNAPS12", "SNAPS17") ~ "SNAP Authorized",
Variable_Code %in% c("WICS11", "WICS16") ~ "WIC Authorized",
Variable_Code %in% c("FFR11", "FFR16") ~ "Fastfood",
)
) %>%
filter(!is.na(Variable_Code)) %>%
group_by(County, Variable_Code) %>%
summarize_all(sum)
grocery_data_clean <-
grocery_data %>%
filter(County %in% project_county_names) %>%
mutate(
Variable_Code = case_when(
Variable_Code %in% c("GROC11", "GROC16") ~ "Grocery",
Variable_Code %in% c("SUPERC11", "SUPERC16") ~ "Supercenter",
Variable_Code %in% c("CONVS11", "CONVS16") ~ "Convenience",
Variable_Code %in% c("SPECS11", "SPECS16") ~ "Specialized",
Variable_Code %in% c("SNAPS12", "SNAPS17") ~ "SNAP Authorized",
Variable_Code %in% c("WICS11", "WICS16") ~ "WIC Authorized",
Variable_Code %in% c("FFR11", "FFR16") ~ "Fastfood",
)
) %>%
filter(!is.na(Variable_Code)) %>%
filter(-State) %>%
group_by(County, Variable_Code) %>%
summarize_all(sum)
grocery_data_clean <-
grocery_data %>%
filter(County %in% project_county_names) %>%
mutate(
Variable_Code = case_when(
Variable_Code %in% c("GROC11", "GROC16") ~ "Grocery",
Variable_Code %in% c("SUPERC11", "SUPERC16") ~ "Supercenter",
Variable_Code %in% c("CONVS11", "CONVS16") ~ "Convenience",
Variable_Code %in% c("SPECS11", "SPECS16") ~ "Specialized",
Variable_Code %in% c("SNAPS12", "SNAPS17") ~ "SNAP Authorized",
Variable_Code %in% c("WICS11", "WICS16") ~ "WIC Authorized",
Variable_Code %in% c("FFR11", "FFR16") ~ "Fastfood",
)
) %>%
filter(!is.na(Variable_Code)) %>%
select(-State) %>%
group_by(County, Variable_Code) %>%
summarize_all(sum)
setwd("~/Documents/GitHub/djacobsberg.github.io")
ces4 <- read_excel("calenviroscreen40resultsdatadictionary_F_2021.xlsx")
ces4_clean <-
ces4 %>%
select(!ends_with("Pctl"))
ca_tracts <- tracts("CA", cb = T, progress_bar = F)
ces4_map <- ces4_clean %>%
filter(`California County` %in% project_county_names) %>%
left_join(
ca_tracts %>%
transmute(GEOID = GEOID %>% as.numeric()),
by = c("Census Tract" = "GEOID")
) %>%
st_as_sf()
setwd("~/Documents/GitHub/djacobsberg.github.io")
View(grocery_data)
View(grocery_data)
View(acs_2019_5yr_all_counties)
View(acs_2019_5yr_all_counties)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
library(tidyverse)
library(sf)
library(tigris)
library(censusapi)
library(mapview)
library(devtools)
library(leaflet)
library(plotly)
library(readxl)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
case_data <- read_excel("QuintoAndar.xlsx")
case_data <- read_excel("QuintoAndar.xlsx")
View(case_data)
View(case_data)
case_data <- read_excel("QuintoAndar.xlsx")
case_data <- read_excel("QuintoAndar.xlsx", sheet = 3)
View(case_data)
View(case_data)
rm(case_data)
